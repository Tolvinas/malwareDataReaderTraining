import numpy as np
from sklearn import svm
from sklearn import model_selection
from sklearn.model_selection import KFold
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier

# m_sDataFile = '.\groupedByRiskScore1000.csv'
# dataFile = '.\groupedByRiskScoreSize1000Multiplier2.00.csv'
dataFile = '.\\converted1000.csv'
# dataFile = '.\groupedByRiskScoreSize1000Multiplier2.0splitDataset0.csv'
dbTrain = np.genfromtxt(dataFile, delimiter=",", dtype=np.string_, usecols=np.arange(0, 1001))
parametersCount = dbTrain.shape[1] - 1

xtr = dbTrain[:, 0:parametersCount]
Xtr = xtr.astype(dtype=np.int16)
ytr = dbTrain[:, parametersCount]

encoder = LabelEncoder()
Ytr = encoder.fit_transform(ytr)
Ytr = Ytr.astype(dtype=np.int16)

# kfold = KFold(n_splits=5, shuffle=True)
kfold = KFold(n_splits=5, shuffle=True)

svmModel = svm.SVC(gamma='auto', verbose=False)
results = model_selection.cross_val_score(svmModel, Xtr, Ytr, cv=kfold)
print("SVM Accuracy: %.3f%%" % (results.mean()*100.0))

results = model_selection.cross_val_score(DecisionTreeClassifier(), Xtr, Ytr, cv=kfold)
print("Decision tree Accuracy: %.3f%%" % (results.mean()*100.0))
